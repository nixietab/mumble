name: Nightly Linux Build and Release

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    name: Build Mumble for Linux and Push Nightly Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 1

      - name: Set environment variables (mimic build.yml)
        run: |
          echo "BUILD_TYPE=Release" >> $GITHUB_ENV
          echo "CMAKE_OPTIONS='-Dtests=ON -Dsymbols=ON -Ddisplay-install-paths=ON -Ddatabase-mysql-tests=ON -Ddatabase-postgresql-tests=ON'" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            build-essential \
            cmake \
            pkg-config \
            libboost-all-dev \
            libssl-dev \
            libprotobuf-dev \
            protobuf-compiler \
            libopus-dev \
            libcap-dev \
            libxi-dev \
            libasound2-dev \
            libpulse-dev \
            libspeexdsp-dev \
            libavahi-compat-libdnssd-dev \
            libsndfile1-dev \
            qttools5-dev-tools \
            qtbase5-dev \
            qtbase5-private-dev \
            qtmultimedia5-dev

      - name: Build Mumble (with build.sh)
        run: |
          chmod +x .github/workflows/build.sh
          .github/workflows/build.sh

      - name: Package build as tar.gz
        run: |
          cd "${GITHUB_WORKSPACE}/build"
          tar czf ../mumble-nightly-linux.tar.gz .

      - name: Create/Update nightly release with tarball
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly-linux
          name: Nightly Linux Build
          body: "Automated nightly build of Mumble for Linux."
          prerelease: true
          files: mumble-nightly-linux.tar.gz
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Overwrite nightly tag (optional)
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag -f nightly-linux
          git push -f origin nightly-linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
