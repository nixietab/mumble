name: "Nightly Build"

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:
    branches:
      - main

env:
  BUILD_TYPE: Release
  CMAKE_OPTIONS: |
    -Dtests=OFF -Dsymbols=ON -Dwarnings-as-errors=OFF

jobs:
  pre_run:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: same_content_newer
          skip_after_successful_duplicate: 'true'

  build:
    needs: pre_run
    if: needs.pre_run.outputs.should_skip != 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install-dependencies
        with:
          type: shared
          os: ubuntu-latest
          arch: 64bit

      - name: Create build dir
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Run CMake
        run: |
          cmake -G Ninja -S $GITHUB_WORKSPACE -B ${{ runner.workspace }}/build \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CMAKE_OPTIONS -DCMAKE_UNITY_BUILD=ON
        shell: bash

      - name: Build
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config $BUILD_TYPE
        shell: bash

      - name: Package build
        run: |
          cd ${{ runner.workspace }}/build
          tar -czf build.tar.gz *
        shell: bash

      - name: Upload Nightly to Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly
          name: "Nightly Build"
          prerelease: true
          files: ${{ runner.workspace }}/build/build.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
